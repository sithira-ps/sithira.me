{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["// contentlayer.config.ts\nimport { defineDocumentType, makeSource } from 'contentlayer2/source-files'\nimport remarkMath from 'remark-math'\nimport rehypeKatex from 'rehype-katex'\nimport {\n  remarkExtractFrontmatter,\n  remarkCodeTitles,\n  remarkImgToJsx,\n  extractTocHeadings,\n} from 'pliny/mdx-plugins/index.js'\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    tags: { type: 'list', of: { type: 'string' }, default: [] },\n    lastmod: { type: 'date' },\n    draft: { type: 'boolean' },\n    summary: { type: 'string' },\n    images: { type: 'json' },\n    authors: { type: 'list', of: { type: 'string' } },\n    layout: { type: 'string' },\n    bibliography: { type: 'string' },\n    canonicalUrl: { type: 'string' },\n  },\n  computedFields: {\n    url: { type: 'string', resolve: (post) => `/blog/${post._raw.flattenedPath}` },\n    path: { type: 'string', resolve: (post) => post._raw.flattenedPath },\n    slug: { type: 'string', resolve: (post) => post._raw.flattenedPath.replace(/^.+?(\\/)/, '')},\n    filePath: { type: 'string', resolve: (post) => post._raw.sourceFilePath },\n    toc: { type: 'json', resolve: (doc) => extractTocHeadings(doc.body.raw) },\n  },\n  \n}))\n\nexport default makeSource({\n  contentDirPath: 'posts',\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [remarkMath],\n    rehypePlugins: [rehypeKatex],\n  },\n})"],
  "mappings": ";AACA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,gBAAgB;AACvB,OAAO,iBAAiB;AACxB;AAAA,EAIE;AAAA,OACK;AAEA,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,SAAS,CAAC,EAAE;AAAA,IAC1D,SAAS,EAAE,MAAM,OAAO;AAAA,IACxB,OAAO,EAAE,MAAM,UAAU;AAAA,IACzB,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,QAAQ,EAAE,MAAM,OAAO;AAAA,IACvB,SAAS,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAChD,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,cAAc,EAAE,MAAM,SAAS;AAAA,IAC/B,cAAc,EAAE,MAAM,SAAS;AAAA,EACjC;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK,EAAE,MAAM,UAAU,SAAS,CAAC,SAAS,SAAS,KAAK,KAAK,aAAa,GAAG;AAAA,IAC7E,MAAM,EAAE,MAAM,UAAU,SAAS,CAAC,SAAS,KAAK,KAAK,cAAc;AAAA,IACnE,MAAM,EAAE,MAAM,UAAU,SAAS,CAAC,SAAS,KAAK,KAAK,cAAc,QAAQ,YAAY,EAAE,EAAC;AAAA,IAC1F,UAAU,EAAE,MAAM,UAAU,SAAS,CAAC,SAAS,KAAK,KAAK,eAAe;AAAA,IACxE,KAAK,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,mBAAmB,IAAI,KAAK,GAAG,EAAE;AAAA,EAC1E;AAEF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,UAAU;AAAA,IAC1B,eAAe,CAAC,WAAW;AAAA,EAC7B;AACF,CAAC;",
  "names": []
}
